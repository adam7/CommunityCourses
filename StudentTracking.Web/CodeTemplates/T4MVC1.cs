// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[CompilerGenerated]
public static class MVC {
    public static StudentTracking.Web.Controllers.AccountController Account = new T4MVC_AccountController();
    public static StudentTracking.Web.Controllers.AddressController Address = new T4MVC_AddressController();
    public static StudentTracking.Web.Controllers.CentreController Centre = new T4MVC_CentreController();
    public static StudentTracking.Web.Controllers.CourseController Course = new T4MVC_CourseController();
    public static StudentTracking.Web.Controllers.HomeController Home = new T4MVC_HomeController();
    public static StudentTracking.Web.Controllers.PersonController Person = new T4MVC_PersonController();
    public static StudentTracking.Web.Controllers.StudentController Student = new T4MVC_StudentController();
    public static StudentTracking.Web.Controllers.TasterSessionController TasterSession = new T4MVC_TasterSessionController();
    public static StudentTracking.Web.Controllers.UnitController Unit = new T4MVC_UnitController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}


namespace StudentTracking.Web.Controllers {
    public partial class AccountController {

        public AccountController() { }

        [CompilerGenerated]
        protected AccountController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }


        [CompilerGenerated]
        public readonly string Name = "Account";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string LogOn = "LogOn";
            public readonly string LogOff = "LogOff";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string LogOn = "LogOn";
        }
    }
}
namespace StudentTracking.Web.Controllers {
    public partial class AddressController {

        public AddressController() { }

        [CompilerGenerated]
        protected AddressController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }


        [CompilerGenerated]
        public readonly string Name = "Address";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string Index = "Index";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string Details = "Details";
            public readonly string Form = "Form";
        }
    }
}
namespace StudentTracking.Web.Controllers {
    public partial class CentreController {

        public CentreController() { }

        [CompilerGenerated]
        protected CentreController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }

        [NonAction]
        public ActionResult Details() {
            return new T4MVC_ActionResult(Name, Actions.Details);
        }

        [NonAction]
        public ActionResult Edit() {
            return new T4MVC_ActionResult(Name, Actions.Edit);
        }


        [CompilerGenerated]
        public readonly string Name = "Centre";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string Index = "Index";
            public readonly string Details = "Details";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string Details = "Details";
            public readonly string Edit = "Edit";
            public readonly string Index = "Index";
        }
    }
}
namespace StudentTracking.Web.Controllers {
    public partial class CourseController {

        public CourseController() { }

        [CompilerGenerated]
        protected CourseController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }

        [NonAction]
        public ActionResult Details() {
            return new T4MVC_ActionResult(Name, Actions.Details);
        }

        [NonAction]
        public ActionResult Edit() {
            return new T4MVC_ActionResult(Name, Actions.Edit);
        }

        [NonAction]
        public ActionResult AddStudent() {
            return new T4MVC_ActionResult(Name, Actions.AddStudent);
        }

        [NonAction]
        public ActionResult UpdateSessionComplete() {
            return new T4MVC_ActionResult(Name, Actions.UpdateSessionComplete);
        }

        [NonAction]
        public ActionResult UpdateModuleComplete() {
            return new T4MVC_ActionResult(Name, Actions.UpdateModuleComplete);
        }


        [CompilerGenerated]
        public readonly string Name = "Course";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string Index = "Index";
            public readonly string Details = "Details";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
            public readonly string AddStudent = "AddStudent";
            public readonly string UpdateSessionComplete = "UpdateSessionComplete";
            public readonly string UpdateModuleComplete = "UpdateModuleComplete";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string Details = "Details";
            public readonly string Edit = "Edit";
            public readonly string Index = "Index";
        }
    }
}
namespace StudentTracking.Web.Controllers {
    public partial class HomeController {

        public HomeController() { }

        [CompilerGenerated]
        protected HomeController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }


        [CompilerGenerated]
        public readonly string Name = "Home";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string Index = "Index";
            public readonly string About = "About";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string About = "About";
            public readonly string Index = "Index";
        }
    }
}
namespace StudentTracking.Web.Controllers {
    public partial class PersonController {

        public PersonController() { }

        [CompilerGenerated]
        protected PersonController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }

        [NonAction]
        public ActionResult Edit() {
            return new T4MVC_ActionResult(Name, Actions.Edit);
        }


        [CompilerGenerated]
        public readonly string Name = "Person";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string Index = "Index";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string Create = "Create";
            public readonly string Details = "Details";
            public readonly string Form = "Form";
            public readonly string Index = "Index";
            public readonly string List = "List";
        }
    }
}
namespace StudentTracking.Web.Controllers {
    public partial class StudentController {

        public StudentController() { }

        [CompilerGenerated]
        protected StudentController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }

        [NonAction]
        public ActionResult Details() {
            return new T4MVC_ActionResult(Name, Actions.Details);
        }

        [NonAction]
        public ActionResult Edit() {
            return new T4MVC_ActionResult(Name, Actions.Edit);
        }


        [CompilerGenerated]
        public readonly string Name = "Student";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string Index = "Index";
            public readonly string Details = "Details";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string Create = "Create";
            public readonly string Details = "Details";
            public readonly string Edit = "Edit";
            public readonly string Index = "Index";
        }
    }
}
namespace StudentTracking.Web.Controllers {
    public partial class TasterSessionController {

        public TasterSessionController() { }

        [CompilerGenerated]
        protected TasterSessionController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }

        [NonAction]
        public ActionResult AddStudent() {
            return new T4MVC_ActionResult(Name, Actions.AddStudent);
        }

        [NonAction]
        public ActionResult Details() {
            return new T4MVC_ActionResult(Name, Actions.Details);
        }

        [NonAction]
        public ActionResult Edit() {
            return new T4MVC_ActionResult(Name, Actions.Edit);
        }


        [CompilerGenerated]
        public readonly string Name = "TasterSession";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string AddStudent = "AddStudent";
            public readonly string Create = "Create";
            public readonly string Details = "Details";
            public readonly string Edit = "Edit";
            public readonly string Index = "Index";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string Details = "Details";
            public readonly string Edit = "Edit";
            public readonly string Index = "Index";
        }
    }
}
namespace StudentTracking.Web.Controllers {
    public partial class UnitController {

        public UnitController() { }

        [CompilerGenerated]
        protected UnitController(Dummy d) { }

        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = (IT4MVCActionResult)result;
            return RedirectToRoute(callInfo.RouteValues);
        }

        [NonAction]
        public ActionResult Details() {
            return new T4MVC_ActionResult(Name, Actions.Details);
        }

        [NonAction]
        public ActionResult Edit() {
            return new T4MVC_ActionResult(Name, Actions.Edit);
        }


        [CompilerGenerated]
        public readonly string Name = "Unit";

        static readonly ActionNames s_actions = new ActionNames();
        [CompilerGenerated]
        public ActionNames Actions { get { return s_actions; } }
        [CompilerGenerated]
        public class ActionNames {
            public readonly string Index = "Index";
            public readonly string Details = "Details";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
        }


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string Index = "Index";
        }
    }
}
namespace T4MVC {
    public class SharedController {


        static readonly ViewNames s_views = new ViewNames();
        [CompilerGenerated]
        public ViewNames Views { get { return s_views; } }
        [CompilerGenerated]
        public class ViewNames {
            public readonly string Error = "Error";
            public readonly string LogOnUserControl = "LogOnUserControl";
        }
    }
}

namespace T4MVC {
    [CompilerGenerated]
    public class T4MVC_AccountController: StudentTracking.Web.Controllers.AccountController {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult LogOn() {
            var callInfo = new T4MVC_ActionResult("Account", Actions.LogOn);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOn(string userName, string password) {
            var callInfo = new T4MVC_ActionResult("Account", Actions.LogOn);
            callInfo.RouteValues.Add("userName", userName);
            callInfo.RouteValues.Add("password", password);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOff() {
            var callInfo = new T4MVC_ActionResult("Account", Actions.LogOff);
            return callInfo;
        }

    }
    [CompilerGenerated]
    public class T4MVC_AddressController: StudentTracking.Web.Controllers.AddressController {
        public T4MVC_AddressController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult("Address", Actions.Index);
            return callInfo;
        }

    }
    [CompilerGenerated]
    public class T4MVC_CentreController: StudentTracking.Web.Controllers.CentreController {
        public T4MVC_CentreController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult("Centre", Actions.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult("Centre", Actions.Details);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult("Centre", Actions.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(StudentTracking.Web.ViewModel.CentreViewModel centreViewModel) {
            var callInfo = new T4MVC_ActionResult("Centre", Actions.Create);
            callInfo.RouteValues.Add("centreViewModel", centreViewModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult("Centre", Actions.Edit);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(StudentTracking.Web.ViewModel.CentreViewModel centreViewModel) {
            var callInfo = new T4MVC_ActionResult("Centre", Actions.Edit);
            callInfo.RouteValues.Add("centreViewModel", centreViewModel);
            return callInfo;
        }

    }
    [CompilerGenerated]
    public class T4MVC_CourseController: StudentTracking.Web.Controllers.CourseController {
        public T4MVC_CourseController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult("Course", Actions.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult("Course", Actions.Details);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult("Course", Actions.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(StudentTracking.Web.ViewModel.CourseViewModel courseViewModel) {
            var callInfo = new T4MVC_ActionResult("Course", Actions.Create);
            callInfo.RouteValues.Add("courseViewModel", courseViewModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult("Course", Actions.Edit);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AddStudent(int id, int studentId) {
            var callInfo = new T4MVC_ActionResult("Course", Actions.AddStudent);
            callInfo.RouteValues.Add("id", id);
            callInfo.RouteValues.Add("studentId", studentId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UpdateSessionComplete(int courseId, int studentId, int courseSessionId, bool complete) {
            var callInfo = new T4MVC_ActionResult("Course", Actions.UpdateSessionComplete);
            callInfo.RouteValues.Add("courseId", courseId);
            callInfo.RouteValues.Add("studentId", studentId);
            callInfo.RouteValues.Add("courseSessionId", courseSessionId);
            callInfo.RouteValues.Add("complete", complete);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UpdateModuleComplete(int courseId, int studentId, int courseModuleId, bool complete) {
            var callInfo = new T4MVC_ActionResult("Course", Actions.UpdateModuleComplete);
            callInfo.RouteValues.Add("courseId", courseId);
            callInfo.RouteValues.Add("studentId", studentId);
            callInfo.RouteValues.Add("courseModuleId", courseModuleId);
            callInfo.RouteValues.Add("complete", complete);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(StudentTracking.Web.ViewModel.CourseViewModel courseViewModel) {
            var callInfo = new T4MVC_ActionResult("Course", Actions.Edit);
            callInfo.RouteValues.Add("courseViewModel", courseViewModel);
            return callInfo;
        }

    }
    [CompilerGenerated]
    public class T4MVC_HomeController: StudentTracking.Web.Controllers.HomeController {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult("Home", Actions.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult About() {
            var callInfo = new T4MVC_ActionResult("Home", Actions.About);
            return callInfo;
        }

    }
    [CompilerGenerated]
    public class T4MVC_PersonController: StudentTracking.Web.Controllers.PersonController {
        public T4MVC_PersonController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult("Person", Actions.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult("Person", Actions.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(StudentTracking.Data.Model.Person person) {
            var callInfo = new T4MVC_ActionResult("Person", Actions.Create);
            callInfo.RouteValues.Add("person", person);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult("Person", Actions.Edit);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(StudentTracking.Data.Model.Person person, StudentTracking.Data.Model.Address address) {
            var callInfo = new T4MVC_ActionResult("Person", Actions.Edit);
            callInfo.RouteValues.Add("person", person);
            callInfo.RouteValues.Add("address", address);
            return callInfo;
        }

    }
    [CompilerGenerated]
    public class T4MVC_StudentController: StudentTracking.Web.Controllers.StudentController {
        public T4MVC_StudentController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult("Student", Actions.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult("Student", Actions.Details);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult("Student", Actions.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(StudentTracking.Web.ViewModel.StudentViewModel studentViewModel) {
            var callInfo = new T4MVC_ActionResult("Student", Actions.Create);
            callInfo.RouteValues.Add("studentViewModel", studentViewModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult("Student", Actions.Edit);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(StudentTracking.Web.ViewModel.StudentViewModel studentViewModel) {
            var callInfo = new T4MVC_ActionResult("Student", Actions.Edit);
            callInfo.RouteValues.Add("studentViewModel", studentViewModel);
            return callInfo;
        }

    }
    [CompilerGenerated]
    public class T4MVC_TasterSessionController: StudentTracking.Web.Controllers.TasterSessionController {
        public T4MVC_TasterSessionController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult AddStudent(int id, int studentId) {
            var callInfo = new T4MVC_ActionResult("TasterSession", Actions.AddStudent);
            callInfo.RouteValues.Add("id", id);
            callInfo.RouteValues.Add("studentId", studentId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult("TasterSession", Actions.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(StudentTracking.Data.Model.TasterSession tasterSession) {
            var callInfo = new T4MVC_ActionResult("TasterSession", Actions.Create);
            callInfo.RouteValues.Add("tasterSession", tasterSession);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult("TasterSession", Actions.Details);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult("TasterSession", Actions.Edit);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(System.Web.Mvc.FormCollection form) {
            var callInfo = new T4MVC_ActionResult("TasterSession", Actions.Edit);
            callInfo.RouteValues.Add("form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult("TasterSession", Actions.Index);
            return callInfo;
        }

    }
    [CompilerGenerated]
    public class T4MVC_UnitController: StudentTracking.Web.Controllers.UnitController {
        public T4MVC_UnitController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult("Unit", Actions.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult("Unit", Actions.Details);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult("Unit", Actions.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(System.Web.Mvc.FormCollection collection) {
            var callInfo = new T4MVC_ActionResult("Unit", Actions.Create);
            callInfo.RouteValues.Add("collection", collection);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult("Unit", Actions.Edit);
            callInfo.RouteValues.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, System.Web.Mvc.FormCollection collection) {
            var callInfo = new T4MVC_ActionResult("Unit", Actions.Edit);
            callInfo.RouteValues.Add("id", id);
            callInfo.RouteValues.Add("collection", collection);
            return callInfo;
        }

    }

    [CompilerGenerated]
    public class Dummy {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

namespace System.Web.Mvc {
    [CompilerGenerated]
    public static class T4Extensions {
        public static string ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result) {
            return htmlHelper.RouteLink(linkText, result.GetRouteValueDictionary());
        }

        public static string ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result, object htmlAttributes) {
            return ActionLink(htmlHelper, linkText, result, new RouteValueDictionary(htmlAttributes));
        }

        public static string ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result, IDictionary<string, object> htmlAttributes) {
            return htmlHelper.RouteLink(linkText, result.GetRouteValueDictionary(), htmlAttributes);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod) {
            return htmlHelper.BeginForm(result, formMethod, null);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod, object htmlAttributes) {
            return BeginForm(htmlHelper, result, formMethod, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod, IDictionary<string, object> htmlAttributes) {
            var callInfo = (IT4MVCActionResult)result;
            return htmlHelper.BeginForm(callInfo.Action, callInfo.Controller, callInfo.RouteValues, formMethod, htmlAttributes);
        }

        public static string Action(this UrlHelper urlHelper, ActionResult result) {
            return urlHelper.RouteUrl(result.GetRouteValueDictionary());
        }

        public static string ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions);
        }

        public static string ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions, object htmlAttributes) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions, new RouteValueDictionary(htmlAttributes));
        }

        public static string ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions, IDictionary<string, object> htmlAttributes) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions, htmlAttributes);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result) {
            return routes.MapRoute(name, url, result, (ActionResult)null);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults) {
            // Start by adding the default values from the anonymous object (if any)
            var routeValues = new RouteValueDictionary(defaults);

            // Then add the Controller/Action names and the parameters from the call
            foreach (var pair in result.GetRouteValueDictionary()) {
                routeValues.Add(pair.Key, pair.Value);
            }

            // Create and add the route
            var route = new Route(url, routeValues, new MvcRouteHandler());
            routes.Add(name, route);
            return route;
        }

        public static RouteValueDictionary GetRouteValueDictionary(this ActionResult result) {
            return ((IT4MVCActionResult)result).RouteValues;
        }

        public static void InitMVCT4Result(this IT4MVCActionResult result, string controller, string action) {
            result.Controller = controller;
            result.Action = action; ;
            result.RouteValues = new RouteValueDictionary();
            result.RouteValues.Add("Controller", controller);
            result.RouteValues.Add("Action", action);
        }
    }
}

[CompilerGenerated]
public interface IT4MVCActionResult {
    string Action { get; set; }
    string Controller { get; set; }
    RouteValueDictionary RouteValues { get; set; }
}

[CompilerGenerated]
public class T4MVC_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult {
    public T4MVC_ActionResult(string controller, string action): base()  {
        this.InitMVCT4Result(controller, action);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public RouteValueDictionary RouteValues { get; set; }
}


namespace Links {
    [CompilerGenerated]
    public static class @Scripts {
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath("~/Scripts"); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath("~/Scripts/" + fileName); }
        public static readonly string jquery_1_3_2_vsdoc_js = Url("jquery-1.3.2-vsdoc.js");
        public static readonly string jquery_1_3_2_js = Url("jquery-1.3.2.js");
        public static readonly string jquery_1_3_2_min_vsdoc_js = Url("jquery-1.3.2.min-vsdoc.js");
        public static readonly string jquery_1_3_2_min_js = Url("jquery-1.3.2.min.js");
        public static readonly string jquery_ui_1_7_2_custom_min_js = Url("jquery-ui-1.7.2.custom.min.js");
        public static readonly string jquery_validate_js = Url("jquery.validate.js");
        public static readonly string MicrosoftAjax_debug_js = Url("MicrosoftAjax.debug.js");
        public static readonly string MicrosoftAjax_js = Url("MicrosoftAjax.js");
        public static readonly string MicrosoftMvcAjax_debug_js = Url("MicrosoftMvcAjax.debug.js");
        public static readonly string MicrosoftMvcAjax_js = Url("MicrosoftMvcAjax.js");
        public static readonly string StudentTracking_js = Url("StudentTracking.js");
        public static readonly string xVal_AspNetNative_js = Url("xVal.AspNetNative.js");
        public static readonly string xVal_jquery_validate_js = Url("xVal.jquery.validate.js");
    }

    [CompilerGenerated]
    public static class @Content {
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath("~/Content"); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath("~/Content/" + fileName); }
        public static readonly string bg_header_png = Url("bg-header.png");
        public static readonly string bg_main_corner_sprite_png = Url("bg-main-corner-sprite.png");
        public static readonly string bg_main_png = Url("bg-main.png");
        public static readonly string bg_nav_corner_sprite_png = Url("bg-nav-corner-sprite.png");
        public static readonly string Site_css = Url("Site.css");
        [CompilerGenerated]
        public static class @smoothness {
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath("~/Content/smoothness"); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath("~/Content/smoothness/" + fileName); }
            [CompilerGenerated]
            public static class @images {
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath("~/Content/smoothness/images"); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath("~/Content/smoothness/images/" + fileName); }
                public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
            }
        
            public static readonly string jquery_ui_1_7_2_custom_css = Url("jquery-ui-1.7.2.custom.css");
        }
    
    }

}

static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    public static string ProcessVirtualPath(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }
}


#endregion T4MVC
#pragma warning restore 1591


